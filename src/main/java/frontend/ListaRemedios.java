package frontend;

import backend.Medicamento;
import backend.usuario.PessoaFisica;
import backend.usuario.Uso;
import java.io.File;
import java.lang.reflect.Array;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author leosa
 */
public class ListaRemedios extends javax.swing.JFrame {

    PessoaFisica pessoa;

    /**
     * Creates new form listaremedio
     */
    public ListaRemedios() {}
    
    public void receber(PessoaFisica pessoa){
        this.pessoa = pessoa;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        voltar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        horaRemedio = new javax.swing.JComboBox<>();
        nomeRemedio = new javax.swing.JTextField();
        quantidadeRemedio = new javax.swing.JTextField();
        segunda = new javax.swing.JCheckBox();
        terca = new javax.swing.JCheckBox();
        quarta = new javax.swing.JCheckBox();
        quinta = new javax.swing.JCheckBox();
        sexta = new javax.swing.JCheckBox();
        sabado = new javax.swing.JCheckBox();
        domingo = new javax.swing.JCheckBox();
        novoRemedio = new javax.swing.JButton();
        salvar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaRemedio = new javax.swing.JTable();
        intervaloRemedio = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        doseRemedio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        duracaoRemedio = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        voltar.setText("Retornar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome do remedio:");

        jLabel2.setText("Quantidade:");

        jLabel3.setText("Dias da semana:");

        jLabel4.setText("Hora inicial:");

        horaRemedio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00hr", "01hr", "02hr", "03hr", "04hr", "05hr", "06hr", "07hr", "08hr", "09hr", "10hr", "11hr", "12hr", "13hr", "14hr", "15hr", "16hr", "17hr", "18hr", "19hr", "20hr", "21hr", "22hr", "23hr" }));
        horaRemedio.setEnabled(false);
        horaRemedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horaRemedioActionPerformed(evt);
            }
        });

        nomeRemedio.setEnabled(false);

        quantidadeRemedio.setEnabled(false);
        quantidadeRemedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantidadeRemedioActionPerformed(evt);
            }
        });

        segunda.setText("Segunda");
        segunda.setEnabled(false);
        segunda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                segundaActionPerformed(evt);
            }
        });

        terca.setText("Terça");
        terca.setEnabled(false);

        quarta.setText("Quarta");
        quarta.setEnabled(false);

        quinta.setText("Quinta");
        quinta.setEnabled(false);

        sexta.setText("Sexta");
        sexta.setEnabled(false);

        sabado.setText("Sabado");
        sabado.setEnabled(false);

        domingo.setText("Domingo");
        domingo.setEnabled(false);
        domingo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domingoActionPerformed(evt);
            }
        });

        novoRemedio.setText("Novo Remedio");
        novoRemedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoRemedioActionPerformed(evt);
            }
        });

        salvar.setText("salvar");
        salvar.setEnabled(false);
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        cancelar.setText("cancelar");
        cancelar.setEnabled(false);
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        excluir.setText("excluir");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        tabelaRemedio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Remedio", "Quantidade", "Dias da semana", "Hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaRemedio.setToolTipText("");
        jScrollPane2.setViewportView(tabelaRemedio);

        intervaloRemedio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 vez por dia", "de 1 em 1 hora", "de 2 em 2 horas", "de 3 em 3 horas", "de 4 em 4 horas", "de 5 em 5 horas", "de 6 em 6 horas", "de 7 em 7 horas", "de 8 em 8 horas", "de 9 em 9 horas", "de 10 em 10 horas", "de 11 em 11 horas", "de 12 em 12 horas" }));
        intervaloRemedio.setEnabled(false);
        intervaloRemedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intervaloRemedioActionPerformed(evt);
            }
        });

        jLabel5.setText("Doses:");

        doseRemedio.setEnabled(false);
        doseRemedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doseRemedioActionPerformed(evt);
            }
        });

        jLabel6.setText("Duração");

        duracaoRemedio.setEnabled(false);
        duracaoRemedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duracaoRemedioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(intervaloRemedio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(horaRemedio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(segunda)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(terca))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quantidadeRemedio, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(quarta)
                                    .addComponent(doseRemedio, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quinta)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sexta)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(sabado)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(domingo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(duracaoRemedio, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(voltar)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomeRemedio, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 82, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(172, 172, 172))
            .addGroup(layout.createSequentialGroup()
                .addComponent(novoRemedio)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(voltar)
                .addGap(12, 12, 12)
                .addComponent(novoRemedio)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nomeRemedio, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(quantidadeRemedio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(doseRemedio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(duracaoRemedio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(horaRemedio, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(intervaloRemedio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(salvar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(segunda)
                                    .addComponent(terca)
                                    .addComponent(quarta)
                                    .addComponent(quinta)
                                    .addComponent(sexta)
                                    .addComponent(domingo))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(sabado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(excluir)
                .addGap(24, 24, 24))
        );
        File arquivoEstoque = new File(pessoa.getNomeArquivoUsos());
        if(arquivoEstoque.exists()){
            List<Uso> estoque = PessoaFisica.resgatarListaUsoMedicamentosArquivo(pessoa.getNomeArquivoUsos());
            pessoa.setListaUsoMedicamentos(estoque, false);
            DefaultTableModel val = (DefaultTableModel) tabelaRemedio.getModel();
            for(Uso itemRemedio : pessoa.getListaUsoMedicamentos()){
                String quantidade = String.valueOf(itemRemedio.getQtdDisponivel());
                String dias = itemRemedio.horariosToString();
                String hora = String.valueOf(itemRemedio.getHorarioDeInicio());
                val.addRow(new String[]{itemRemedio.getRemedio().getNome(), quantidade, dias, hora});
            }
        }

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {                                       

        Home tela = new Home();
        tela.receber(pessoa);
        tela.setVisible(true);
        dispose();        // TODO add your handling code here:
    }                                      

    private void novoRemedioActionPerformed(java.awt.event.ActionEvent evt) {                                            
        nomeRemedio.setEnabled(true);
        quantidadeRemedio.setEnabled(true);
        cancelar.setEnabled(true);
        segunda.setEnabled(true);
        terca.setEnabled(true);
        quarta.setEnabled(true);
        quinta.setEnabled(true);
        sexta.setEnabled(true);
        sabado.setEnabled(true);
        domingo.setEnabled(true);
        salvar.setEnabled(true);
        horaRemedio.setEnabled(true);
        doseRemedio.setEnabled(true);
        duracaoRemedio.setEnabled(true);
        
    }                                           

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {                                         
        ListaRemedios lista = new ListaRemedios();
        lista.receber(pessoa);
        lista.setVisible(true);
        dispose();
    }                                        

    private void segundaActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void quantidadeRemedioActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
    }                                                 

    private void domingoActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {                                       
        String hora = horaRemedio.getSelectedItem().toString();
        String intervalo = intervaloRemedio.getSelectedItem().toString();
        ArrayList<String> listaDias = new ArrayList<>();

        if (segunda.isSelected()){listaDias.add("seg");}
        if (terca.isSelected()){listaDias.add("ter");}
        if (quarta.isSelected()){listaDias.add("qua");}
        if (quinta.isSelected()){listaDias.add("qui");}
        if (sexta.isSelected()){listaDias.add("sex");}
        if (sabado.isSelected()){listaDias.add("sab");}
        if (domingo.isSelected()){listaDias.add("dom");}

        int horaInt = 0;
        int intervaloInt = 0;

        switch (hora){
            case "00hr": horaInt = 0; break;
            case "01hr": horaInt = 1; break;
            case "02hr": horaInt = 2; break;
            case "03hr": horaInt = 3; break;
            case "04hr": horaInt = 4; break;
            case "05hr": horaInt = 5; break;
            case "06hr": horaInt = 6; break;
            case "07hr": horaInt = 7; break;
            case "08hr": horaInt = 8; break;
            case "09hr": horaInt = 9; break;
            case "10hr": horaInt = 10; break;
            case "11hr": horaInt = 11; break;
            case "12hr": horaInt = 12; break;
            case "13hr": horaInt = 13; break;
            case "14hr": horaInt = 14; break;
            case "15hr": horaInt = 15; break;
            case "16hr": horaInt = 16; break;
            case "17hr": horaInt = 17; break;
            case "18hr": horaInt = 18; break;
            case "19hr": horaInt = 19; break;
            case "20hr": horaInt = 20; break;
            case "21hr": horaInt = 21; break;
            case "22hr": horaInt = 22; break;
            case "23hr": horaInt = 23; break;
        }
        switch (intervalo){
            case "1 vez po dia": intervaloInt = 24; break;
            case "de 1 em 1 hora": intervaloInt = 1; break;
            case "de 2 em 2 horas": intervaloInt = 2; break;
            case "de 3 em 3 horas": intervaloInt = 3; break;
            case "de 4 em 4 horas": intervaloInt = 4; break;
            case "de 5 em 5 horas": intervaloInt = 5; break;
            case "de 6 em 6 horas": intervaloInt = 6; break;
            case "de 7 em 7 horas": intervaloInt = 7; break;
            case "de 8 em 8 horas": intervaloInt = 8; break;
            case "de 9 em 9 horas": intervaloInt = 9; break;
            case "de 10 em 10 horas": intervaloInt = 10; break;
            case "de 11 em 11 horas": intervaloInt = 11; break;
            case "de 12 em 12 horas": intervaloInt = 12; break;
        }
        Medicamento remedio = new Medicamento(nomeRemedio.getText());
        Uso novoUso = new Uso(remedio, Integer.parseInt(doseRemedio.getText()), listaDias, Integer.parseInt(duracaoRemedio.getText()), 
                                                        Integer.parseInt(quantidadeRemedio.getText()), horaInt, intervaloInt);
        this.pessoa.adicionarUsoNaListaUsoMedicamentos(novoUso);
        ListaRemedios lista = new ListaRemedios();
        lista.receber(pessoa);
        lista.setVisible(true);
        dispose();
    }                                      

    private void horaRemedioActionPerformed(java.awt.event.ActionEvent evt) {                                            
    intervaloRemedio.setEnabled(true);  
    }                                           

    private void intervaloRemedioActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        
    }                                                

    private void doseRemedioActionPerformed(java.awt.event.ActionEvent evt) {                                            
       
    }                                           

    private void duracaoRemedioActionPerformed(java.awt.event.ActionEvent evt) {}     

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {    

        String nomeRemedioExcluir = tabelaRemedio.getValueAt(tabelaRemedio.getSelectedRow(),0).toString();
        try {
            this.pessoa.removerUsoNaListaUsoMedicamentos(nomeRemedioExcluir);
        } catch (Exception e) {}
        finally{
            ListaRemedios lista = new ListaRemedios();
            lista.receber(pessoa);
            lista.setVisible(true);
            dispose();
        }
    }                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaRemedios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaRemedios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaRemedios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaRemedios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaRemedios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton cancelar;
    private javax.swing.JCheckBox domingo;
    private javax.swing.JTextField doseRemedio;
    private javax.swing.JTextField duracaoRemedio;
    private javax.swing.JButton excluir;
    private javax.swing.JComboBox<String> horaRemedio;
    private javax.swing.JComboBox<String> intervaloRemedio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nomeRemedio;
    private javax.swing.JButton novoRemedio;
    private javax.swing.JTextField quantidadeRemedio;
    private javax.swing.JCheckBox quarta;
    private javax.swing.JCheckBox quinta;
    private javax.swing.JCheckBox sabado;
    private javax.swing.JButton salvar;
    private javax.swing.JCheckBox segunda;
    private javax.swing.JCheckBox sexta;
    private javax.swing.JTable tabelaRemedio;
    private javax.swing.JCheckBox terca;
    private javax.swing.JButton voltar;
    // End of variables declaration                   
}
